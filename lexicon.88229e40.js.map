{"version":3,"sources":["translation-responses.js","collegiate-responses.js","elementary-responses.js","index.js"],"names":["translationResponses","apple","voluminous","collegiateResponse","meta","id","uuid","sort","src","section","stems","offensive","hwi","hw","prs","mw","sound","audio","ref","stat","fl","def","sseq","sn","dt","t","sdsense","sd","uros","ure","et","date","ld_link","link_hw","link_fl","suppl","examples","ldq","ldhw","sls","shortdef","elementaryResponse","hom","history","pl","pt","window","dataStore","dictionarySet","currentDictionary","currentInputtedText","currentTranslation","currentActiveText","currentWord","undefined","currentDictionaryCard","styles","dictionaryCardBlock__cover","wmCover","dictionaryCardBlock__coverTitle","startApp","inputValue","document","querySelector","value","createActiveText","getTranslation","resetApp","changeCurrentDictionary","setCurrentDictionaryCard","str","data","replace","parseDataFromTranslationResponse","setCurrentWord","event","target","getAttribute","getWordInformation","html","activeTextBlock","trim","split","forEach","word","activeTextBlock__word","cleanText","clearText","hasLink","test","hasNeedCapitalize","linkLessTarget","match","linkLessRes","needCapitalize","capitalized","toUpperCase","punctuationLessWord","response","changeAsteriskToDot","wordSyllables","wordTranscription","wordGrammaticalFunction","definitionGroups","relatives","wordCard","wordCard__title","wordCard__grammatical","wordCard__headword","wordCard__verticalDivider","wordCard__defTitle","definitions","flat","map","definitionItem","definition","definitionData","definitionNumber","example","additionData","wordCard__defListItem","wordCard__defListNum","wordCard__defExample","additionDefinition","additionExample","createDefList","relativeData","relativeWord","createRelativesList","parseDataFromCollegiateResponse","parseDataFromElementaryResponse","header","header__logo","logo","header__title","inputBlock","appRoot__item","inputBlock__textarea","translationBlock","dictionaryCardBlock","dictionarySwitch","dictionary","footer__radioInput","footer__dictionarySwitchButton","join","footer","app","appRootContainer","ROOT","renderApp","classList","add","appRoot","innerHTML"],"mappings":"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","file":"lexicon.88229e40.js","sourceRoot":"..","sourcesContent":["'use strict';\nexport const translationResponses = {\n  apple: [[['яблоко', 'apple', null, null, 10]], null, 'en', null, null, null, null, []],\n  voluminous: [\n    [['объемный', 'voluminous', null, null, 10]],\n    null,\n    'en',\n    null,\n    null,\n    null,\n    null,\n    [],\n  ],\n};\n","'use strict';\nexport const collegiateResponse = {\n  meta: {\n    id: 'voluminous',\n    uuid: '0d01b967-971f-4ec5-8fe0-10513d29c39b',\n    sort: '220130400',\n    src: 'collegiate',\n    section: 'alpha',\n    stems: ['voluminous', 'voluminously', 'voluminousness', 'voluminousnesses'],\n    offensive: false,\n  },\n  hwi: {\n    hw: 'vo*lu*mi*nous',\n    prs: [\n      {\n        mw: 'v\\u0259-\\u02c8l\\u00fc-m\\u0259-n\\u0259s',\n        sound: {\n          audio: 'volumi02',\n          ref: 'c',\n          stat: '1',\n        },\n      },\n    ],\n  },\n  fl: 'adjective',\n  def: [\n    {\n      sseq: [\n        [\n          [\n            'sense',\n            {\n              sn: '1 a',\n              dt: [\n                ['text', '{bc}having or marked by great {a_link|volume} or bulk {bc}{sx|large||} '],\n                [\n                  'vis',\n                  [\n                    {\n                      t: 'long {wi}voluminous{/wi} tresses',\n                    },\n                  ],\n                ],\n              ],\n              sdsense: {\n                sd: 'also',\n                dt: [\n                  ['text', '{bc}{sx|full||} '],\n                  [\n                    'vis',\n                    [\n                      {\n                        t: 'a {wi}voluminous{/wi} skirt',\n                      },\n                    ],\n                  ],\n                ],\n              },\n            },\n          ],\n          [\n            'sense',\n            {\n              sn: 'b',\n              dt: [\n                ['text', '{bc}{sx|numerous||} '],\n                [\n                  'vis',\n                  [\n                    {\n                      t: 'trying to keep track of {wi}voluminous{/wi} slips of paper',\n                    },\n                  ],\n                ],\n              ],\n            },\n          ],\n        ],\n        [\n          [\n            'sense',\n            {\n              sn: '2 a',\n              dt: [\n                [\n                  'text',\n                  '{bc}filling or capable of filling a large volume or several {a_link|volumes} ',\n                ],\n                [\n                  'vis',\n                  [\n                    {\n                      t: 'a {wi}voluminous{/wi} literature on the subject',\n                    },\n                  ],\n                ],\n              ],\n            },\n          ],\n          [\n            'sense',\n            {\n              sn: 'b',\n              dt: [\n                ['text', '{bc}writing or speaking much or at great length '],\n                [\n                  'vis',\n                  [\n                    {\n                      t: 'a {wi}voluminous{/wi} correspondent',\n                    },\n                  ],\n                ],\n              ],\n            },\n          ],\n        ],\n        [\n          [\n            'sense',\n            {\n              sn: '3',\n              dt: [\n                ['text', '{bc}consisting of many folds, coils, or convolutions {bc}{sx|winding||}'],\n              ],\n            },\n          ],\n        ],\n      ],\n    },\n  ],\n  uros: [\n    {\n      ure: 'vo*lu*mi*nous*ly',\n      fl: 'adverb',\n    },\n    {\n      ure: 'vo*lu*mi*nous*ness',\n      fl: 'noun',\n    },\n  ],\n  et: [['text', 'Late Latin {it}voluminosus{/it}, from Latin {it}volumin-, volumen{/it}']],\n  date: '1611{ds||3||}',\n  ld_link: {\n    link_hw: 'voluminous',\n    link_fl: 'adjective',\n  },\n  suppl: {\n    examples: [\n      {\n        t: 'the building\\u0027s high ceilings and {it}voluminous{/it} spaces',\n      },\n      {\n        t: 'a writer of {it}voluminous{/it} output',\n      },\n    ],\n    ldq: {\n      ldhw: 'voluminous',\n      fl: 'adjective',\n      def: [\n        {\n          sls: ['formal'],\n          sseq: [\n            [\n              [\n                'sense',\n                {\n                  dt: [['text', '{bc}very large {bc}containing a lot of space']],\n                },\n              ],\n            ],\n            [\n              [\n                'sense',\n                {\n                  sls: ['of clothing'],\n                  dt: [['text', '{bc}using large amounts of fabric {bc}very full']],\n                },\n              ],\n            ],\n            [\n              [\n                'sense',\n                {\n                  dt: [['text', '{bc}having very many words or pages']],\n                },\n              ],\n            ],\n          ],\n        },\n      ],\n    },\n  },\n  shortdef: [\n    'having or marked by great volume or bulk : large; also : full',\n    'numerous',\n    'filling or capable of filling a large volume or several volumes',\n  ],\n};\n","'use strict';\nexport const elementaryResponse = {\n  meta: {\n    id: 'school:1',\n    uuid: '35f9e493-c896-4bd6-803b-417e4f915938',\n    src: 'sd2',\n    section: 'alpha',\n    stems: ['school', 'schools'],\n    offensive: false,\n  },\n  hom: 1,\n  hwi: {\n    hw: 'school',\n    prs: [\n      {\n        mw: 'ˈskül',\n        sound: {\n          audio: 'school01',\n        },\n      },\n    ],\n  },\n  fl: 'noun',\n  def: [\n    {\n      sseq: [\n        [\n          [\n            'sense',\n            {\n              sn: '1',\n              dt: [['text', '{bc}a place for teaching and learning']],\n            },\n          ],\n        ],\n        [\n          [\n            'sense',\n            {\n              sn: '2',\n              dt: [\n                ['text', '{bc}a session of teaching and learning '],\n                [\n                  'vis',\n                  [\n                    {\n                      t: 'night {it}school{/it}',\n                    },\n                    {\n                      t: \"You'll be late for {it}school{/it}.\",\n                    },\n                  ],\n                ],\n              ],\n            },\n          ],\n        ],\n        [\n          [\n            'sense',\n            {\n              sn: '3',\n              dt: [['text', '{bc}{sx|schoolhouse||}']],\n            },\n          ],\n        ],\n        [\n          [\n            'sense',\n            {\n              sn: '4',\n              dt: [\n                ['text', '{bc}the teachers and pupils of a school '],\n                [\n                  'vis',\n                  [\n                    {\n                      t: 'The entire {it}school{/it} was at the rally.',\n                    },\n                  ],\n                ],\n              ],\n            },\n          ],\n        ],\n        [\n          [\n            'sense',\n            {\n              sn: '5',\n              dt: [\n                ['text', '{bc}a group of persons who share the same opinions and beliefs '],\n                [\n                  'vis',\n                  [\n                    {\n                      t: 'a new {it}school{/it} of philosophy',\n                    },\n                  ],\n                ],\n              ],\n            },\n          ],\n        ],\n      ],\n    },\n  ],\n  history: {\n    pl: 'Word History',\n    pt: [\n      [\n        'text',\n        'You may not think of your education as relaxation, but, believe it or not, the word {it}school{/it} can be traced back to a Greek word meaning “leisure.” Ancient Greek {it}scholē{/it}, “rest, leisure,” came to be applied to the philosophical discussions in which the best of Greek society spent their free time (of which they had a great deal, since slaves did most of the real work). The meaning of {it}scholē{/it} was extended to the groups who listened to a particular philosopher, and later to the set of beliefs held by such a group. When Latin {it}schola{/it} was borrowed from Greek, the emphasis fell more on the place where a philosopher spoke, and it is the sense “place of instruction” that was ultimately passed to English.',\n      ],\n    ],\n  },\n  shortdef: [\n    'a place for teaching and learning',\n    'a session of teaching and learning',\n    'schoolhouse',\n  ],\n};\n","'use strict';\n\nimport { translationResponses } from './translation-responses.js';\nimport { collegiateResponse } from './collegiate-responses.js';\nimport { elementaryResponse } from './elementary-responses.js';\n\nimport styles from './styles.css';\n\nimport wmCover from './img/mw-cover_.svg';\nimport logo from './img/logo.svg';\n\nwindow.dataStore = {\n  dictionarySet: [\n    \"MERRIAM-WEBSTER'S COLLEGIATE DICTIONARY\",\n    \"MERRIAM-WEBSTER'S ELEMENTARY DICTIONARY\",\n  ],\n  currentDictionary: \"MERRIAM-WEBSTER'S COLLEGIATE DICTIONARY\",\n  currentInputtedText: '',\n  currentTranslation: 'There will be Your translation here...',\n  currentActiveText: 'There will be Your clickable original text here...',\n  currentWord: undefined,\n  currentDictionaryCard: `<div>\n                            <img class=\"${styles.dictionaryCardBlock__cover}\" src=\"${wmCover}\" alt=\"merriam-webster's logo\">\n                            <p class=\"${styles.dictionaryCardBlock__coverTitle}\">MERRIAM-WEBSTER'S COLLEGIATE DICTIONARY</p>\n                          </div>`,\n};\n\nwindow.startApp = () => {\n  const inputValue = document.querySelector('#input').value;\n  if (inputValue !== '') {\n    window.dataStore.currentInputtedText = inputValue;\n    window.dataStore.currentActiveText = window.createActiveText(\n      window.dataStore.currentInputtedText,\n    );\n    window.dataStore.currentTranslation = window.getTranslation(\n      window.dataStore.currentInputtedText,\n    );\n  }\n};\n\nwindow.resetApp = () => {\n  window.dataStore.currentInputtedText = '';\n  window.dataStore.currentActiveText = 'There will be Your clickable original text here...';\n  window.dataStore.currentTranslation = 'There will be Your translation here...';\n  window.dataStore.currentWord = undefined;\n  window.dataStore.currentDictionaryCard = `<div>\n                            <img class=\"${styles.dictionaryCardBlock__cover}\" src=\"${wmCover}\" alt=\"merriam-webster's logo\">\n                            <p class=\"${styles.dictionaryCardBlock__coverTitle}\">${window.dataStore.currentDictionary}</p>\n                          </div>`;\n};\n\nwindow.changeCurrentDictionary = value => {\n  window.dataStore.currentDictionary = value;\n  if (window.dataStore.currentWord === undefined) {\n    window.dataStore.currentDictionaryCard = `<div>\n                            <img class=\"${styles.dictionaryCardBlock__cover}\" src=\"${wmCover}\" alt=\"merriam-webster's logo\">\n                            <p class=\"${styles.dictionaryCardBlock__coverTitle}\">${window.dataStore.currentDictionary}</p>\n                          </div>`;\n  } else {\n    window.setCurrentDictionaryCard();\n  }\n};\n\nwindow.getTranslation = str => {\n  const parseDataFromTranslationResponse = data => {\n    return data[0][0][0]\n      .replace(/\\s*<\\s*>/g, '.')\n      .replace(/\\s*<\\s*1\\s*>/g, '!')\n      .replace(/\\s*<\\s*3\\s*>/g, '<br>')\n      .replace(/\\s*<\\s*2\\s*>/g, '?');\n  };\n\n  if (translationResponses[str]) {\n    return parseDataFromTranslationResponse(translationResponses[str]);\n  } else {\n    return 'Я переведу тебе это в своей следующей версии.';\n  }\n};\n\nwindow.setCurrentWord = event => {\n  if (event.target.getAttribute('data-value') !== null) {\n    window.dataStore.currentWord = event.target.getAttribute('data-value');\n  }\n};\n\nwindow.setCurrentDictionaryCard = () => {\n  window.dataStore.currentDictionaryCard = window.getWordInformation();\n};\n\nwindow.createActiveText = str => {\n  let html = `<div id=\"activeInputContent\"\n                   class=\"${styles.activeTextBlock}\"\n                   onclick=\"window.setCurrentWord(event);\n                   window.setCurrentDictionaryCard();\n                   window.renderApp()\">`;\n  str\n    .replace(/\\s{2,}/g, ' ')\n    .trim()\n    .split(' ')\n    .forEach(word => {\n      html += `<a href='#'\n                  class=\"${styles.activeTextBlock__word}\"\n                  data-value=\"${word}\">${word}</a> `;\n    });\n  html += '</div>';\n  return html;\n};\n\nwindow.getWordInformation = () => {\n  const cleanText = str => {\n    let clearText = str\n      .replace(/({bc})/g, ': ')\n      .replace(/({wi})/g, '')\n      .replace(/({\\/wi})/g, '')\n      .replace(/({\\/it})/g, '')\n      .replace(/({it})/g, '');\n    const hasLink = /({a_link\\|).+?}/.test(clearText);\n    const hasNeedCapitalize = /({sx\\|).+?(\\|\\|})/.test(clearText);\n    //Make text linkLess\n    if (hasLink) {\n      const [linkLessTarget] = clearText.match(/({a_link\\|).+?}/);\n      const linkLessRes = linkLessTarget.replace(/({a_link\\|)/g, '').replace(/}/g, '');\n      clearText = clearText.replace(/({a_link\\|).+?}/, linkLessRes);\n    }\n    //Make text capitalized\n    if (hasNeedCapitalize) {\n      const [needCapitalize] = clearText.match(/({sx\\|).+?(\\|\\|})/);\n      const capitalized = needCapitalize\n        .replace(/({sx\\|)/g, '')\n        .replace(/(\\|\\|})/g, '')\n        .toUpperCase();\n      clearText = clearText.replace(/({sx\\|).+?(\\|\\|})/, capitalized);\n    }\n    if (hasLink || hasNeedCapitalize) {\n      cleanText(clearText);\n    }\n    return clearText;\n  };\n\n  const parseDataFromCollegiateResponse = response => {\n    const changeAsteriskToDot = str => {\n      return str.replace(/\\*/g, '·​');\n    };\n\n    const createDefList = definitionGroups => {\n      const definitions = definitionGroups.flat().map(definitionItem => {\n        const [, definition] = definitionItem;\n        return definition;\n      });\n      let html = '';\n\n      definitions.forEach(definitionData => {\n        const {\n          sn: definitionNumber,\n          dt: [[, definition], [, [{ t: example }]] = [, [{ t: 'no example' }]]],\n          sdsense: additionData,\n        } = definitionData;\n\n        html += `<p class=\"${styles.wordCard__defListItem}\">\n                  <b class=\"${styles.wordCard__defListNum}\">${definitionNumber}</b>\n                  ${cleanText(definition)}</br>\n                  <i class=\"${styles.wordCard__defExample}\">// ${cleanText(example)}</i>\n                </p>`;\n\n        if (additionData) {\n          const {\n            dt: [[, additionDefinition], [, [{ t: additionExample }]] = [, [{ t: 'no example' }]]],\n          } = additionData;\n          html += `<p class=\"${styles.wordCard__defListItem}\">\n                  also ${cleanText(additionDefinition)}</br>\n                  <i class=\"${styles.wordCard__defExample}\">// ${cleanText(additionExample)}</i>\n                </p>`;\n        }\n      });\n      return html;\n    };\n\n    const createRelativesList = relatives => {\n      let html = '';\n      relatives.forEach(relativeData => {\n        const { ure: relativeWord, fl: wordGrammaticalFunction } = relativeData;\n        html += `<p class=\"${styles.wordCard__defListItem}\">\n        <b class=\"${styles.wordCard__defListNum}\">${changeAsteriskToDot(\n          relativeWord,\n        )}</b> <i>${wordGrammaticalFunction}</i>\n        </p>`;\n      });\n      return html;\n    };\n\n    const {\n      meta: { id: currentWord },\n      hwi: {\n        hw: wordSyllables,\n        prs: [{ mw: wordTranscription }],\n      },\n      fl: wordGrammaticalFunction,\n      def: [{ sseq: definitionGroups }],\n      uros: relatives,\n    } = response;\n\n    return `<div class=\"${styles.wordCard}\">\n  <h3 class=\"${styles.wordCard__title}\">${currentWord} <i class=\"${\n      styles.wordCard__grammatical\n    }\">${wordGrammaticalFunction}</i></h3>\n  <p class=\"${styles.wordCard__headword}\">\n  ${changeAsteriskToDot(wordSyllables)}\n  <span class=\"${styles.wordCard__verticalDivider}\">|</span>\\\\ ${wordTranscription} \\\\ </p>\n  <hr>\n  <h4 class=\"${styles.wordCard__defTitle}\">Definition of <i>'${currentWord}'</i></h4>\n  <div>${createDefList(definitionGroups)}</div>\n  <hr>\n  <h4 class=\"${styles.wordCard__defTitle}\">Other Words from <i>'${currentWord}'</i> :</h4>\n  <div>${createRelativesList(relatives)}</div>\n  <hr>\n  </div>`;\n  };\n\n  const parseDataFromElementaryResponse = response => {\n    const createDefList = definitionGroups => {\n      const definitions = definitionGroups.flat().map(definitionItem => {\n        const [, definition] = definitionItem;\n        return definition;\n      });\n      let html = '';\n\n      definitions.forEach(definitionData => {\n        const {\n          sn: definitionNumber,\n          dt: [[, definition], [, [{ t: example }]] = [, [{ t: '' }]]],\n          sdsense: additionData,\n        } = definitionData;\n\n        html += `<p class=\"${styles.wordCard__defListItem}\">\n                  <b class=\"${styles.wordCard__defListNum}\">${definitionNumber}</b>\n                  ${cleanText(definition)}</br>\n                  <i class=\"${styles.wordCard__defExample}\">${cleanText(example)}</i>\n                </p>`;\n\n        if (additionData) {\n          const {\n            dt: [[, additionDefinition], [, [{ t: additionExample }]] = [, [{ t: 'no example' }]]],\n          } = additionData;\n          html += `<p class=\"${styles.wordCard__defListItem}\">\n                  also ${cleanText(additionDefinition)}</br>\n                  <i class=\"${styles.wordCard__defExample}\">// ${cleanText(additionExample)}</i>\n                </p>`;\n        }\n      });\n      return html;\n    };\n\n    const {\n      hwi: {\n        hw: currentWord,\n        prs: [{ mw: wordTranscription }],\n      },\n      fl: wordGrammaticalFunction,\n      def: [{ sseq: definitionGroups }],\n    } = response;\n\n    return `<div class=\"${styles.wordCard}\">\n  <h3 class=\"${styles.wordCard__title}\">${currentWord} <i class=\"${\n      styles.wordCard__grammatical\n    }\">${wordGrammaticalFunction}</i></h3>\n  <p class=\"${styles.wordCard__headword}\">\\\\ ${wordTranscription} \\\\ </p>\n  <hr>\n  <h4 class=\"${styles.wordCard__defTitle}\">Definition of <i>'${currentWord}'</i></h4>\n  <div>${createDefList(definitionGroups)}</div>\n  <hr>\n  </div>`;\n  };\n\n  const punctuationLessWord = window.dataStore.currentWord.replace(\n    /[.,\\/#!$%\\^&\\*;:{}=\\-_`~()?]/g,\n    '',\n  );\n\n  if (window.dataStore.currentDictionary === \"MERRIAM-WEBSTER'S COLLEGIATE DICTIONARY\") {\n    if (collegiateResponse['meta']['id'] === punctuationLessWord) {\n      return parseDataFromCollegiateResponse(collegiateResponse);\n    } else {\n      return `<div class=\"${styles.wordCard}\">We do not have any information about word \"${punctuationLessWord}\" yet...</div>`;\n    }\n  } else if (window.dataStore.currentDictionary === \"MERRIAM-WEBSTER'S ELEMENTARY DICTIONARY\") {\n    if (elementaryResponse['hwi']['hw'] === punctuationLessWord) {\n      return parseDataFromElementaryResponse(elementaryResponse);\n    } else {\n      return `<div class=\"${styles.wordCard}\">We do not have any information about word \"${punctuationLessWord}\" yet...</div>`;\n    }\n  }\n};\n\nconst header = () => {\n  return `<header class=\"${styles.header}\">\n      <a href=\"#\"><img class=\"${styles.header__logo}\" src=\"${logo}\" alt=\"logo\" /></a>\n      <h1 class=\"${styles.header__title}\">Lexicon</h1>\n    </header>`;\n};\n\nconst inputBlock = () => {\n  return `<div class=\"${styles.appRoot__item}\">\n  <textarea\n  id=\"input\"\n    class=\"${styles.inputBlock__textarea}\"\n    rows=\"10\"\n    cols=\"50\"\n    placeholder=\"Write or paste your text here.\nIn this version you can work with word 'voluminous'.\nHave a productive work!\">${window.dataStore.currentInputtedText}</textarea>\n  <button onclick=\"window.startApp(); window.renderApp()\"\n  >Translate</button>\n  <button onclick=\"window.resetApp(); window.renderApp()\">\n    Clear\n  </button>\n  </div>`;\n};\n\nconst translationBlock = () => {\n  return `<div id=\"output\" class=\"${styles.appRoot__item}\">${window.dataStore.currentTranslation}</div>`;\n};\n\nconst activeTextBlock = () => {\n  return `<div class=\"${styles.appRoot__item}\">\n    ${window.dataStore.currentActiveText}\n  </div>`;\n};\n\nconst dictionaryCardBlock = () => {\n  return `<div id=\"dictionaryCardBlock\" class=\"${styles.appRoot__item} ${styles.dictionaryCardBlock}\">\n            ${window.dataStore.currentDictionaryCard}\n          </div>`;\n};\n\nconst dictionarySwitch = () => {\n  return window.dataStore.dictionarySet\n    .map(dictionary => {\n      return `<label>\n                <input\n                class=\"${styles.footer__radioInput}\"\n                type=\"radio\"\n                value=\"${dictionary}\"\n                name=\"dictionary\"\n                ${dictionary === window.dataStore.currentDictionary ? 'checked' : ''}\n                onchange=\"changeCurrentDictionary(this.value); window.renderApp()\"\n                />\n                <span class=\"${styles.footer__dictionarySwitchButton}\">${dictionary}</span>\n              </label>`;\n    })\n    .join('');\n};\n\nconst footer = () => {\n  return `<footer class=\"${styles.footer}\">\n  ${dictionarySwitch()}\n  </footer>`;\n};\n\nconst app = () => {\n  return `<div class=\"${styles.appRootContainer}\">\n  ${header()}\n  ${inputBlock()}\n  <br/>\n  ${translationBlock()}\n  <br/>\n  ${activeTextBlock()}\n  <br/>\n  ${dictionaryCardBlock()}\n  ${footer()}\n  </div>`;\n};\n\nconst ROOT = document.querySelector('#app-root');\n\nwindow.renderApp = () => {\n  ROOT.classList.add(`${styles.appRoot}`);\n  ROOT.innerHTML = app();\n};\n\nrenderApp();\n"]}