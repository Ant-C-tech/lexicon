parcelRequire=function(e,r,t,n){var i,o="function"==typeof parcelRequire&&parcelRequire,u="function"==typeof require&&require;function f(t,n){if(!r[t]){if(!e[t]){var i="function"==typeof parcelRequire&&parcelRequire;if(!n&&i)return i(t,!0);if(o)return o(t,!0);if(u&&"string"==typeof t)return u(t);var c=new Error("Cannot find module '"+t+"'");throw c.code="MODULE_NOT_FOUND",c}p.resolve=function(r){return e[t][1][r]||r},p.cache={};var l=r[t]=new f.Module(t);e[t][0].call(l.exports,p,l,l.exports,this)}return r[t].exports;function p(e){return f(p.resolve(e))}}f.isParcelRequire=!0,f.Module=function(e){this.id=e,this.bundle=f,this.exports={}},f.modules=e,f.cache=r,f.parent=o,f.register=function(r,t){e[r]=[function(e,r){r.exports=t},{}]};for(var c=0;c<t.length;c++)try{f(t[c])}catch(e){i||(i=e)}if(t.length){var l=f(t[t.length-1]);"object"==typeof exports&&"undefined"!=typeof module?module.exports=l:"function"==typeof define&&define.amd?define(function(){return l}):n&&(this[n]=l)}if(parcelRequire=f,i)throw i;return f}({"ItfP":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.collegiateResponse=void 0;const e={meta:{id:"voluminous",uuid:"0d01b967-971f-4ec5-8fe0-10513d29c39b",sort:"220130400",src:"collegiate",section:"alpha",stems:["voluminous","voluminously","voluminousness","voluminousnesses"],offensive:!1},hwi:{hw:"vo*lu*mi*nous",prs:[{mw:"və-ˈlü-mə-nəs",sound:{audio:"volumi02",ref:"c",stat:"1"}}]},fl:"adjective",def:[{sseq:[[["sense",{sn:"1 a",dt:[["text","{bc}having or marked by great {a_link|volume} or bulk {bc}{sx|large||} "],["vis",[{t:"long {wi}voluminous{/wi} tresses"}]]],sdsense:{sd:"also",dt:[["text","{bc}{sx|full||} "],["vis",[{t:"a {wi}voluminous{/wi} skirt"}]]]}}],["sense",{sn:"b",dt:[["text","{bc}{sx|numerous||} "],["vis",[{t:"trying to keep track of {wi}voluminous{/wi} slips of paper"}]]]}]],[["sense",{sn:"2 a",dt:[["text","{bc}filling or capable of filling a large volume or several {a_link|volumes} "],["vis",[{t:"a {wi}voluminous{/wi} literature on the subject"}]]]}],["sense",{sn:"b",dt:[["text","{bc}writing or speaking much or at great length "],["vis",[{t:"a {wi}voluminous{/wi} correspondent"}]]]}]],[["sense",{sn:"3",dt:[["text","{bc}consisting of many folds, coils, or convolutions {bc}{sx|winding||}"]]}]]]}],uros:[{ure:"vo*lu*mi*nous*ly",fl:"adverb"},{ure:"vo*lu*mi*nous*ness",fl:"noun"}],et:[["text","Late Latin {it}voluminosus{/it}, from Latin {it}volumin-, volumen{/it}"]],date:"1611{ds||3||}",ld_link:{link_hw:"voluminous",link_fl:"adjective"},suppl:{examples:[{t:"the building's high ceilings and {it}voluminous{/it} spaces"},{t:"a writer of {it}voluminous{/it} output"}],ldq:{ldhw:"voluminous",fl:"adjective",def:[{sls:["formal"],sseq:[[["sense",{dt:[["text","{bc}very large {bc}containing a lot of space"]]}]],[["sense",{sls:["of clothing"],dt:[["text","{bc}using large amounts of fabric {bc}very full"]]}]],[["sense",{dt:[["text","{bc}having very many words or pages"]]}]]]}]}},shortdef:["having or marked by great volume or bulk : large; also : full","numerous","filling or capable of filling a large volume or several volumes"]};exports.collegiateResponse=e;
},{}],"Jj4R":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.thesaurusResponse=void 0;const e={meta:{id:"umpire",uuid:"1c8533d7-23e6-4c3b-9c48-854066e8caff",src:"coll_thes",section:"alpha",target:{tuuid:"897edcad-2e88-4ab7-b81b-170ddf8eb4ec",tsrc:"collegiate"},stems:["umpire","umpires"],syns:[["adjudicator","arbiter","arbitrator","judge","referee"]],ants:[],offensive:!1},hwi:{hw:"umpire"},fl:"noun",def:[{sseq:[[["sense",{dt:[["text","a person who impartially decides or resolves a dispute or controversy "],["vis",[{t:"usually acts as {it}umpire{/it} in the all-too-frequent squabbles between the two other roommates"}]]],syn_list:[[{wd:"adjudicator"},{wd:"arbiter"},{wd:"arbitrator"},{wd:"judge"},{wd:"referee"}]],rel_list:[[{wd:"jurist"},{wd:"justice"},{wd:"magistrate"}],[{wd:"intermediary"},{wd:"intermediate"},{wd:"mediator"},{wd:"mediatrix"},{wd:"moderator"},{wd:"negotiator"}],[{wd:"conciliator"},{wd:"go-between"},{wd:"peacemaker"},{wd:"reconciler"},{wd:"troubleshooter"}],[{wd:"decider"}]]}]]]}],shortdef:["a person who impartially decides or resolves a dispute or controversy"]};exports.thesaurusResponse=e;
},{}],"FO+Z":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.getMerriamWebsterUrl=exports.getGoogleTranslateUrl=void 0;const e=e=>{return"https://translate.googleapis.com/translate_a/single?client=gtx&sl=en&tl=ru&dt=t&q="+(e=>e.replace(/[\/#$%\^&\*{}\_`~()]/g,""))(e)};exports.getGoogleTranslateUrl=e;const t=(e,t)=>"MERRIAM-WEBSTER'S COLLEGIATE DICTIONARY"===t?"https://www.dictionaryapi.com/api/v3/references/collegiate/json/"+e+"?key=2d93e048-b07e-4c1f-b4ee-c838357e2371":"https://www.dictionaryapi.com/api/v3/references/thesaurus/json/"+e+"?key=dff46cd7-113e-4a6c-962b-00429c5f49b9";exports.getMerriamWebsterUrl=t;
},{}],"uz3e":[function(require,module,exports) {
module.exports={};
},{}],"Tnu0":[function(require,module,exports) {
module.exports={appRoot:"_appRoot_7aa08",appRootContainer:"_appRootContainer_7aa08",header:"_header_7aa08",header__logo:"_header__logo_7aa08",header__title:"_header__title_7aa08",appRoot__item:"_appRoot__item_7aa08",inputBlock__textarea:"_inputBlock__textarea_7aa08",translationBlock:"_translationBlock_7aa08",translationBlock__wrapper:"_translationBlock__wrapper_7aa08",activeTextBlock:"_activeTextBlock_7aa08",activeTextBlock__word:"_activeTextBlock__word_7aa08",dictionaryCardBlock:"_dictionaryCardBlock_7aa08",dictionaryCardBlock__cover:"_dictionaryCardBlock__cover_7aa08",dictionaryCardBlock__coverTitle:"_dictionaryCardBlock__coverTitle_7aa08",wordCard:"_wordCard_7aa08",wordCard__title:"_wordCard__title_7aa08",wordCard__wordSyllables:"_wordCard__wordSyllables_7aa08",wordCard__alsoDivider:"_wordCard__alsoDivider_7aa08",wordCard__grammatical:"_wordCard__grammatical_7aa08",wordCard__verticalDivider:"_wordCard__verticalDivider_7aa08",wordCard__defTitle:"_wordCard__defTitle_7aa08",wordCard__defListNum:"_wordCard__defListNum_7aa08",wordCard__defListItem:"_wordCard__defListItem_7aa08",wordCard__defExample:"_wordCard__defExample_7aa08",wordCard__exampleInSentences:"_wordCard__exampleInSentences_7aa08",footer:"_footer_7aa08",visually_hidden:"_visually_hidden_7aa08",footer__radioInput:"_footer__radioInput_7aa08",footer__dictionarySwitchButton:"_footer__dictionarySwitchButton_7aa08"};
},{"./normalize.css":"uz3e","./img\\bg.jpg":[["bg.21569f53.jpg","JxVT"],"JxVT"]}],"CPgE":[function(require,module,exports) {
module.exports="mw-cover_.f616d250.svg";
},{}],"s/ih":[function(require,module,exports) {
module.exports="logo.00feed21.svg";
},{}],"Focm":[function(require,module,exports) {
"use strict";var t=require("./collegiate-responses.js"),e=require("./thesaurus-responses.js"),r=require("./utils.js"),a=o(require("./styles.css")),n=o(require("./img/mw-cover_.svg")),d=o(require("./img/logo.svg"));function o(t){return t&&t.__esModule?t:{default:t}}window.dataStore={dictionarySet:["MERRIAM-WEBSTER'S COLLEGIATE DICTIONARY","MERRIAM-WEBSTER'S COLLEGIATE THESAURUS"],currentDictionary:"MERRIAM-WEBSTER'S COLLEGIATE DICTIONARY",currentInputtedText:"",currentTranslation:"There will be translation here...",currentActiveText:"There will be clickable text here to get data from MERRIAM-WEBSTER'S DICTIONARIES...",currentWord:void 0,currentDictionaryCard:`<div>\n                            <img class="${a.default.dictionaryCardBlock__cover}" src="${n.default}" alt="merriam-webster's logo">\n                            <p class="${a.default.dictionaryCardBlock__coverTitle}">MERRIAM-WEBSTER'S COLLEGIATE DICTIONARY</p>\n                          </div>`,isTranslationLoading:!1,translationError:null,isWordDataLoading:!1,wordDataError:null},window.startApp=(()=>{const t=document.querySelector("#input").value;""!==t&&(window.dataStore.isTranslationLoading=!0,window.dataStore.translationError=null,window.dataStore.currentInputtedText=t,window.renderApp(),(t=>fetch((0,r.getGoogleTranslateUrl)(t)).then(t=>t.json()))(window.dataStore.currentInputtedText).then(t=>{window.dataStore.isTranslationLoading=!1,window.dataStore.currentTranslation=(t=>{let e="";const[r]=t;return r.forEach(t=>{const[r]=t;e+=r}),e})(t),window.dataStore.currentActiveText=window.createActiveText(window.dataStore.currentInputtedText)}).catch(()=>{window.dataStore.translationError="Some error occurred. Try again!"}).finally(()=>{window.renderApp()}))}),window.resetApp=(()=>{window.dataStore.currentInputtedText="",window.dataStore.currentActiveText="There will be clickable text here to get data from MERRIAM-WEBSTER'S DICTIONARIES...",window.dataStore.currentTranslation="There will be translation here...",window.dataStore.currentWord=void 0,window.dataStore.currentDictionaryCard=`<div>\n                            <img class="${a.default.dictionaryCardBlock__cover}" src="${n.default}" alt="merriam-webster's logo">\n                            <p class="${a.default.dictionaryCardBlock__coverTitle}">${window.dataStore.currentDictionary}</p>\n                          </div>`,window.dataStore.isTranslationLoading=!1,window.dataStore.translationError=null,window.dataStore.isWordDataLoading=!1,window.dataStore.wordDataError=null,window.renderApp()}),window.activeTextHandler=(t=>{const e=t=>{let r=t.replace(/({bc})/g,": ").replace(/({wi})/g,"").replace(/({\/wi})/g,"").replace(/({\/it})/g,"").replace(/({it})/g,"").replace(/({dx})/g,"").replace(/({\/dx})/g,"").replace(/({sc})/g,"").replace(/({\/sc})/g,"").replace(/({dx_def}).+?({\/dx_def})/g,"").replace(/({dx_ety}).+?({\/dx_ety})/g,"").replace(/({ds).+?(\|})/g,"").replace(/({dxt).+?(})/g,"").replace(/({ma}).+?({\/ma})/g,"");const a=/({\w+_link\|).+?}/.test(r),n=/({sx\|).+?(\|.{0,5}})/.test(r),d=/({ds\|\|).+?(\|\|})/.test(r),o=/({dxt\|).+?(\|\|})/.test(r);if(a){const[t]=r.match(/({\w+_link\|).+?}/),e=t.replace(/({\w+_link\|)/g,"").replace(/}/g,"").split("|")[0];r=r.replace(/({\w+_link\|).+?}/,e)}if(n){const[t]=r.match(/({sx\|).+?(\|.{0,5}})/),e=t.replace(/({sx\|)/g,"").replace(/(\|.{0,5}})/g,"").split("|")[0].toUpperCase();r=r.replace(/({sx\|).+?(\|.{0,5}})/,e)}if(d){const[t]=r.match(/({ds\|\|).+?(\|\|})/),e=t.replace(/({ds\|\|)/g,"").replace(/(\|\|})/g,"");r=r.replace(/({ds\|\|).+?(\|\|})/,`, in the meaning defined at sense ${e}`)}if(o){const[t]=r.match(/({dxt\|).+?(\|\|})/),e=t.replace(/({dxt\|)/g,"").replace(/(\|\|})/g,"");r=r.replace(/({dxt\|).+?(\|\|})/,e)}return(a||n||d||o)&&(r=e(r)),r},n=t=>{const r=t=>t.replace(/\*/g,"·​");let n=`<div class="${a.default.wordCard}">`;return t.forEach(t=>{const d=t.meta.id.split(":")[0];let o="";if(t.meta&&(o+=`<h3 class="${a.default.wordCard__title}">\n                          ${d}`),t.fl){const e=t.fl;o+=`<i class="${a.default.wordCard__grammatical}">\n                        ${e}\n                        </i></h3>`}else o+="</h3>";if(t.hwi){const e=t.hwi.hw;if(o+=`<p class="${a.default.wordCard__wordSyllables}">\n                          ${r(e)}`,t.hwi.prs){const[{mw:e}]=t.hwi.prs;o+=`<span class="${a.default.wordCard__verticalDivider}">|</span> \\ ${e} \\`}o+="</p><hr>"}if(t.meta.stems){const r=t.meta.stems;o+=` <div>\n                            <p><b class="${a.default.wordCard__defListNum}">Variants: </b></p>`,r.forEach(t=>{o+=`<p>${e(t)}</p>`}),o+="</div><hr>"}if(t.def){const[{sseq:r}]=t.def;o+=`<h4 class="${a.default.wordCard__defTitle}">\n                        Definition of <i>'${d}'</i> :\n                        </h4>\n                        <div>${(t=>{const r=t.flat().map(t=>{const[,e]=t;return e});let n=`<p class="${a.default.wordCard__defListItem}">`;return r.forEach(t=>{if(t.sn){const e=t.sn;n+=`<b class="${a.default.wordCard__defListNum}">${e}</b>`}if(t.dt){let r="";t.dt.forEach(t=>{r="","text"===t[0]&&(r+=t[1]),"uns"===t[0]&&(r+=`<span class="${a.default.wordCard__defExample}">Note:</span> ${t[1][0][0][1]}`),0!==r.length&&(n+=`${e(r)}</br>`)});let d="";t.dt.forEach(t=>{if(d="","vis"===t[0]){const[{t:e}]=t[1];d=e}"uns"===t[0]&&t[1].forEach(t=>{"vis"===t[0]&&(d+=`${t[0]}`)}),0!==d.length&&(n+=`<i class="${a.default.wordCard__defExample}">// ${e(d)}</i></br>`)})}}),n+="</p>"})(r)}</div>\n                        <hr>`}if(t.uros){const e=t.uros;o+=`<h4 class="${a.default.wordCard__defTitle}">\n                        Other Words from\n                        <i>'${d}'</i> :\n                        </h4>\n                        <div>${(t=>{let e="";return t.forEach(t=>{const{ure:n,fl:d}=t;e+=`<p class="${a.default.wordCard__defListItem}">\n        <b class="${a.default.wordCard__defListNum}">${r(n)}</b> <i>${d}</i>\n        </p>`}),e})(e)}</div>\n                        <hr>`}if(t.date){const r=t.date;o+=`<div>\n                        <p><b class="${a.default.wordCard__defListNum}">First Known Use: </b></p>\n                        <p>${e(r)}.</p>\n                        </div>`}if(t.et){const r=t.et;o+=` <div>\n                            <p><b class="${a.default.wordCard__defListNum}">Etymology: </b></p>\n                            <p>${(t=>{let r="";return t.forEach(t=>{const[,n]=t;r+=`<p class="${a.default.wordCard__defListItem}">${e(n)}</p>`}),r})(r)}</p>\n                          </div>\n                          <hr>`}n+=o+="<hr>"}),n+="</div>"};window.dataStore.isWordDataLoading=!0,window.dataStore.wordDataError=null,null!==t.target.getAttribute("data-value")&&void 0!==t.target.getAttribute("data-value")&&(window.dataStore.currentWord=t.target.getAttribute("data-value"),window.renderApp(),((t,e)=>fetch((0,r.getMerriamWebsterUrl)(t,e)).then(t=>t.json()))(window.dataStore.currentWord,window.dataStore.currentDictionary).then(t=>{window.dataStore.isWordDataLoading=!1,"MERRIAM-WEBSTER'S COLLEGIATE DICTIONARY"===window.dataStore.currentDictionary?window.dataStore.currentDictionaryCard=n(t):"MERRIAM-WEBSTER'S COLLEGIATE THESAURUS"===window.dataStore.currentDictionary&&(window.dataStore.currentDictionaryCard=(t=>{const{meta:{id:r},fl:n,def:[{sseq:d}]}=t;return`<div class="${a.default.wordCard}">\n              <h3 class="${a.default.wordCard__title}">\n                ${r}\n                <i class="${a.default.wordCard__grammatical}">\n                ${n}\n                </i>\n              </h3>\n              <hr>\n              <h4 class="${a.default.wordCard__defTitle}">\n                Definition of <i>'${r}'</i> :\n              </h4>\n              <div>${(t=>{const r=t.flat().map(t=>{const[,e]=t;return e});let n="";return r.forEach(t=>{const{sn:r="",dt:[[,d],[,[{t:o}]]=[,[{t:"no example"}]]],sdsense:i,syn_list:[l],rel_list:c}=t;if(n+=`<p class="${a.default.wordCard__defListItem}">\n                  <b>${r}</b>\n                  ${e(d)}</br>\n                  <i class="${a.default.wordCard__defExample}">// ${e(o)}</i>\n                </p>`,i){const{dt:[[,t],[,[{t:r}]]=[,[{t:"no example"}]]]}=i;n+=`<p class="${a.default.wordCard__defListItem}">\n                  also ${e(t)}</br>\n                  <i class="${a.default.wordCard__defExample}">// ${e(r)}</i>\n                </p>`}n+="<hr>\n                <h4>Synonyms:</h4>\n                <ul>",l.forEach(t=>{const{wd:e}=t;n+=`<li>${e}</li>`}),n+="</ul>",n+="<hr>\n                <h4>Related words:</h4>\n                <ul>",c.forEach(t=>{n+="<ul>",t.forEach(t=>{const{wd:e}=t;n+=`<li>${e}</li>`}),n+="</ul>"}),n+="</ul>"}),n})(d)}</div>\n              <hr>\n\n              </div>`})(t))}).catch(()=>{window.dataStore.wordDataError="Some error occurred. Try again!"}).finally(()=>{window.renderApp()}))}),window.changeCurrentDictionary=(t=>{window.dataStore.currentDictionary=t,void 0===window.dataStore.currentWord?window.dataStore.currentDictionaryCard=`<div>\n                            <img class="${a.default.dictionaryCardBlock__cover}" src="${n.default}" alt="merriam-webster's logo">\n                            <p class="${a.default.dictionaryCardBlock__coverTitle}">${window.dataStore.currentDictionary}</p>\n                          </div>`:window.setCurrentDictionaryCard()}),window.setCurrentDictionaryCard=(()=>{window.dataStore.currentDictionaryCard=getWordData(window.dataStore.currentWord,window.dataStore.currentDictionary)}),window.createActiveText=(t=>{let e=`<div id="activeInputContent"\n                   class="${a.default.activeTextBlock}"\n                   onclick="window.activeTextHandler(event)">`;return t.replace(/\s{2,}/g," ").trim().split(" ").forEach(t=>{e+=`<a href='#'\n                  class="${a.default.activeTextBlock__word}"\n                  data-value="${t}">${t}</a> `}),e+="</div>"});const i=()=>`<header class="${a.default.header}">\n      <a href="#"><img class="${a.default.header__logo}" src="${d.default}" alt="logo" /></a>\n      <h1 class="${a.default.header__title}">Lexicon</h1>\n    </header>`,l=()=>`<div class="${a.default.appRoot__item}">\n  <textarea\n  id="input"\n    class="${a.default.inputBlock__textarea}"\n    rows="10"\n    cols="50"\n    placeholder="Write or paste your text here.">${window.dataStore.currentInputtedText}</textarea>\n  <button onclick="window.startApp();"\n  >Translate</button>\n  <button onclick="window.resetApp();">\n    Clear\n  </button>\n  </div>`,c=()=>{return`<footer class="${a.default.footer}">\n  ${(()=>window.dataStore.dictionarySet.map(t=>`<label>\n                <input\n                class="${a.default.footer__radioInput}"\n                type="radio"\n                value="${t}"\n                name="dictionary"\n                ${t===window.dataStore.currentDictionary?"checked":""}\n                onchange="changeCurrentDictionary(this.value); window.renderApp()"\n                />\n                <span class="${a.default.footer__dictionarySwitchButton}">${t}</span>\n              </label>`).join(""))()}\n  </footer>`},s=()=>{let t="",e="";return null!==window.dataStore.translationError?(t=window.dataStore.translationError,e=window.dataStore.translationError):!1===window.dataStore.isTranslationLoading?(t=window.dataStore.currentTranslation,e=window.dataStore.currentActiveText):(t="Loading... Please, wait!",e=window.dataStore.currentActiveText),`${(t=>`<div id="output" class="${a.default.appRoot__item} ${a.default.translationBlock}">\n            <div class="${a.default.translationBlock__wrapper}">${t}</div>\n          </div>`)(t)}\n          <br/>\n          ${(t=>`<div class="${a.default.appRoot__item}">\n    ${t}\n  </div>`)(e)}`},w=()=>{let t="";return`${(t=>`<div id="dictionaryCardBlock" class="${a.default.appRoot__item} ${a.default.dictionaryCardBlock}">${t}</div>`)(t=null!==window.dataStore.wordDataError?window.dataStore.wordDataError:!1===window.dataStore.isTranslationLoading?window.dataStore.currentDictionaryCard:"Loading... Please, wait!")}`},u=()=>`<div class="${a.default.appRootContainer}">\n  ${i()}\n  ${l()}\n  <br/>\n  ${s()}\n  <br/>\n  ${w()}\n  ${`<footer class="${a.default.footer}">\n  ${(()=>window.dataStore.dictionarySet.map(t=>`<label>\n                <input\n                class="${a.default.footer__radioInput}"\n                type="radio"\n                value="${t}"\n                name="dictionary"\n                ${t===window.dataStore.currentDictionary?"checked":""}\n                onchange="changeCurrentDictionary(this.value); window.renderApp()"\n                />\n                <span class="${a.default.footer__dictionarySwitchButton}">${t}</span>\n              </label>`).join(""))()}\n  </footer>`}\n  </div>`,p=document.querySelector("#app-root");window.renderApp=(()=>{p.classList.add(`${a.default.appRoot}`),p.innerHTML=u()}),window.renderApp();
},{"./collegiate-responses.js":"ItfP","./thesaurus-responses.js":"Jj4R","./utils.js":"FO+Z","./styles.css":"Tnu0","./img/mw-cover_.svg":"CPgE","./img/logo.svg":"s/ih"}]},{},["Focm"], null)
//# sourceMappingURL=lexicon.17c39685.js.map